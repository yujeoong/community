<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.co.withkbo" />
	
	<!-- ********************************************************************* -->	
	<!-- DataSource 설정(접속정보): 기존에는 context.xml을 불러왔지만 이제는 여기에 설정-->
	<beans:bean name="datasource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mariadb://0.tcp.jp.ngrok.io:14032/withkbo"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="1111"/>
	</beans:bean>

	<!-- DataSource를 이용해 DB 접속 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 위에 있는 접속정보 가져오기 -->
		<beans:property name="dataSource" ref="datasource"/>
		<!-- 실행할 쿼리문이 있는 위치 지정 -->
		<beans:property name="mapperLocations" value="classpath:/kr/co/withkbo/dao/*.xml"/>
	</beans:bean>
	
	<!-- MyBatis 사용하는 영역 지정 -->
	<mybatis-spring:scan base-package="kr.co.withkbo.dao"/>
	
	
	<!-- 이메일 인증 관련 빈 등록 -->
   <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <beans:property name="host" value="smtp.naver.com" />
      <beans:property name="port" value="587" />
      <beans:property name="username" value="bawooljo1010@naver.com" />
      <beans:property name="password" value="tmvmfld1111!" />
      <beans:property name="javaMailProperties">
         <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
                <beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
            </beans:props>
      </beans:property>
      
   </beans:bean>
	<!-- ********************************************************************* -->			
	
</beans:beans>
